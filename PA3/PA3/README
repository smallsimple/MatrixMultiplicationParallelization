To run the code:

1) Put all these files in a directory at $HOME/pa3
2) Edit the .cu files.
3) Run "qsub runjob.sh" while in $HOME/pa3

You will need to define N as 2048 in problem 1. The given implementation is
very slow.

You will need to modify the template from problem 1 for problem 2.  When you
have completed this file there are lines in runjob.sh which can be uncommented
to test it as well.

Oakley is a shared system, do not expect to get your results in time if you
submit your jobs right before the deadline.

Your submission should contain the following:

- A report, similar to the solutions for programming assignment 1 (available on
  carmen). This report should be turned in on carmen and on paper in class.
    For each problem include:
        - A write up of the transformations attempted (and why others weren't).
        - A table of how performance varied with the different transformations.
          Some values can be omitted here, I don't need to see all variations
          of each parameter.
        - The performance of your best versio.
        - Show all performance values in Gflops
        - Tables should be formatted. Do not copy paste the output from the code.
        - The kernel for your best version (do not include the template code).
    
- On carmen only, you should also submit all of your code and the output files.

Grading will be primarily based on effort: Your report should clearly show you
attempted a reasonable number of transformations, including combining
transformations that you've seen in class. Points will not be determined
directly based on performance.
